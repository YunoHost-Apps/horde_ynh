packaging_format = 2

id = "horde"
name = "Horde"
description.en = "Groupware (webmail, adressbook, calendar)"
description.fr = "Groupware (webmail, carnet adresses, agenda)"

version = "5.2.23~ynh1"

maintainers = ["Josué Tille"]

[upstream]
license = "LGPL-2.0"
website = "https://www.horde.org"
demo = "http://demo.horde.org"
admindoc = "https://wiki.horde.org"
code = "https://github.com/horde/base"
cpe = "???" # FIXME: optional but recommended if relevant, this is meant to contain the Common Platform Enumeration, which is sort of a standard id for applications defined by the NIST. In particular, Yunohost may use this is in the future to easily track CVE (=security reports) related to apps. The CPE may be obtained by searching here: https://nvd.nist.gov/products/cpe/search. For example, for Nextcloud, the CPE is 'cpe:2.3:a:nextcloud:nextcloud' (no need to include the version number)
fund = "???" # FIXME: optional but recommended (or remove if irrelevant / not applicable). This is meant to be an URL where people can financially support this app, especially when its development is based on volunteers and/or financed by its community. YunoHost may later advertise it in the webadmin.

[integration]
yunohost = ">= 11.0.9"
architectures = "all" # FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
multi_instance = true
ldap = "?" # FIXME: replace with true, false, or "not_relevant". Not to confuse with the "sso" key : the "ldap" key corresponds to wether or not a user *can* login on the app using its YunoHost credentials.
sso = "?" # FIXME: replace with true, false, or "not_relevant". Not to confuse with the "ldap" key : the "sso" key corresponds to wether or not a user is *automatically logged-in* on the app when logged-in on the YunoHost portal.
disk = "50M" # FIXME: replace with an **estimate** minimum disk requirement. e.g. 20M, 400M, 1G, ...
ram.build = "50M" # FIXME: replace with an **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...
ram.runtime = "50M" # FIXME: replace with an **estimate** minimum ram requirement. e.g. 50M, 400M, 1G, ...

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "path"
    default = "/horde"

    [install.init_main_permission]
    type = "group"
    default = false

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "string"
    choices = ["bg", "de", "en", "es", "fi", "fo", "fr", "hr", "hu", "id", "is", "it", "lt", "lv", "mg", "mk", "mt", "nl", "pl", "pt", "ro", "ru", "sk", "so", "th", "tr", "uz"]
    default = "en"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by Yunohost's core
    type = "user"

    [install.service_autodiscovery]
    ask.en = "Would you like to enable the caldDav/cardDAV service autodiscovery?"
    ask.fr = "Voulez-vous activer l'autodécouverte des services calDAV/cardDAV?"
    type = "boolean"
    default = false

    [install.whups_install]
    ask.en = "Install a ticket-tracking system (Whups)?"
    type = "boolean"
    default = false

    [install.sesha_install]
    ask.en = "Install a Inventory Manager (Sesha)?"
    type = "boolean"
    default = false

    [install.ansel_install]
    ask.en = "Install a full featured photo management (Ansel)?"
    type = "boolean"
    default = false

    [install.wicked_install]
    ask.en = "Install a Wiki (Wicked)?"
    type = "boolean"
    default = false

[resources]
    [resources.system_user]

    [resources.install_dir]

    [resources.permissions]
    main.url = "/"

    [resources.database]
    type = "mysql"
